Object creation logic becomes too convulated

Constructor is not descriptive
	Cannot overload with the same sets of arguments with different names
	Objects can turn into 'optional parameter hell'

Object creation (non-piecewise, unlike builder) 
	Act of creating object can be outsourced to 
		A seperate function (Factory Method)
		May exist in seperate class (Factory)
		Can create hierarchy of factories with the Abstract Factory

		

Factory:  A component responsible solely for the wholesale (not piecewise) creation of objects.

Benefits of factory method is that you get overloads with the same set of parameter types but different names

From the name you can make a suggestion on the kind of object being created, and that helps with having a more descriptive API




in the inner factory implementation i used a factory object that get's instantiated. but there is a static field which just returns the newed up PointFactory object


Only real use for an abstract factory is to give out abstract object as opposed to concrete objects
With Abstract factory you return abstract classes or interfaces



SUMMARY:
A factory method is a static method that creates objects.
A factory can take care of object creation

A factory can be external or reside as an inner class inside the object

